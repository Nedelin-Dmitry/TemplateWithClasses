/*
5.6.Железнодорожная касса и Горьковская железная дорога
Разработать классы RailTicketOffice и GorkyRailway.
Класс Железнодорожная касса должен имитировать работу кассы по продаже билетов на поезда Нижний Новгород – Москва.
•	Считать, что продажа билетов проводится на поезда в пределах 30 дней от текущей даты. - struct Date
•	Считать, что по маршруту Нижний Новгород – Москва курсирует 
    три скоростных поезда «Ласточка» - struct Swallow  
    один фирменный  struct Branded
    один скорый поезд в сутки в каждом направлении. struct Express
•	Все вагоны в поездах «Ласточка» однотипны и содержат по 100 сидячих мест. struct Seat 
•	В фирменном и скором поездах вагоны трех типов :
    плацкартные(27 верхних, 27 нижних мест) struct Econom_carriage
    купейные(18 верхних, 18 нижних мест) struct Coupe_carriage
    СВ(18 нижних мест). SV_carriage
•	Число вагонов в поездах «Ласточка» – 8.
    В фирменном поезде – 2 вагона СВ, 6 купейных вагонов, 4 плацкартных вагона.
    В скором поезде – 4 купейных вагона, 8 плацкартных вагонов.
•	Поезда идентифицируются номерами(десять номеров из диапазона от 1 до 100)
    вагоны – номерами(целые числа от 1 до 12)
    места – номерами(целые числа от 1 до максимума для данного типа вагона).
•	Информация о всех поездах и всех проданных билетах хранится в классе Горьковская железная дорога.
    Для каждого поезда, каждого типа вагона и каждого типа места установлена стоимость билета.
    Считать, что все поезда не делают промежуточных остановок по маршруту.
Класс Железнодорожная касса должен предоставлять следующие операции :  
    1) принять заказ билетов покупателя : дату, поезд, тип вагона(если есть выбор), количество билетов каждого возможного вида(если есть выбор), ФИО пассажиров 
    2) проверить наличие свободных мест по запросу покупателя(при невозможности выдать все билеты в одном вагоне, считать заказ невыполнимым)
    3) зарезервировать места,
    4) рассчитать общую стоимость билетов
    5) отменить заказ билетов 
    6) сформировать билеты(каждый билет включает: дату, номер поезда, номер вагона, номер места, ФИО пассажира, станция отправления, станция прибытия).
Класс Горьковская железная дорога должен использоваться для поддержки работы класса Железнодорожная касса и может быть разработан в минимально - необходимом варианте.

*/

#include<iostream>
#include<vector>
#include<string>

using namespace std;



class Ticket
{
    string Name; // struct Full_Name ???
    string Surname;
    string Patronymic;
    Date Data;
    int Train_id;
    int Seat_id;
    int Wagon_id;
    int Cost; // ????
    string Start_station;
    string Finish_station;
};

// Дата
struct Date
{
    int day;
    int month;
    int year;
};

// Сидения
struct Seat
{
    int id;
    bool occupied;
};

// Обычный вагон(100 мест)
struct Swallow_carriage
{
    int id;
    vector <Seat> Sw_seat(100);
};

// Плацкартный вагон
struct Econom_carriage
{
    int id;
    vector <Seat> Top_seat(27);
    vector <Seat> Lower_seat(27);
};

// Купейный вагон
struct Coupe_carriage
{
    int id;
    vector <Seat> Top_seat(18);
    vector <Seat> Lower_seat(18);
};

// СВ вагон
struct SV_carriage
{
    int id;
    vector <Seat> Lower_seat(18);
};

// Ласточка x3
struct Swallow
{
    int id;
    vector <Swallow_carriage> Wagon(8);
};

// Фирменый x2 ( 1 на направление)
struct Branded {
    int id;
    vector <Econom_carriage> EC_wagon(4);
    vector <Coupe_carriage> CP_wagon(6);
    vector <SV_carriage> SV_wagon(2);
};

// Скорый поезд x2 ( 1 на направление) 4 купейных вагона, 8 плацкартных вагонов
struct Express
{
    int id;
    vector <Econom_carriage> EC_wagon(8);
    vector <Coupe_carriage> CP_wagon(4);
};

/*
Поезда (десять номеров от 1 до 100) - массив int для поездов?
Вагоны(1 - 12)
Места ( 1 - максимум)
*/
class GorkyRailway //(поддержка)
{
 private:
     vector <Swallow> Swallow_train(3);
     Branded M_Braned_train;
     Express M_Express_train;
     Branded N_Braned_train;
     Express N_Express_train;
};

/*
1) принять заказ билетов покупателя : дату, поезд, тип вагона(если есть выбор), количество билетов каждого возможного вида(если есть выбор), ФИО пассажиров
2) проверить наличие свободных мест по запросу покупателя(при невозможности выдать все билеты в одном вагоне, считать заказ невыполнимым)
3) зарезервировать места,
4) рассчитать общую стоимость билетов
5) отменить заказ билетов
6) сформировать билеты(каждый билет включает : дату, номер поезда, номер вагона, номер места, ФИО пассажира, станция отправления, станция прибытия).
*/
class RailTicketOffice //(основной)
{
 private:
     GorkyRailway Rail_way;
     vector <Ticket> TicketS; // пока без размера
 public:

};
